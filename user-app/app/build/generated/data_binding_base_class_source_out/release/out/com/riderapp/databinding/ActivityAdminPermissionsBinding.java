// Generated by view binder compiler. Do not edit!
package com.riderapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.riderapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminPermissionsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SwitchMaterial createChallengeSwitch;

  @NonNull
  public final SwitchMaterial deleteChallengeSwitch;

  @NonNull
  public final SwitchMaterial manageUsersSwitch;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final MaterialButton saveButton;

  @NonNull
  public final SwitchMaterial updateChallengeSwitch;

  @NonNull
  public final SwitchMaterial viewAnalyticsSwitch;

  private ActivityAdminPermissionsBinding(@NonNull LinearLayout rootView,
      @NonNull SwitchMaterial createChallengeSwitch, @NonNull SwitchMaterial deleteChallengeSwitch,
      @NonNull SwitchMaterial manageUsersSwitch, @NonNull ProgressBar progressBar,
      @NonNull MaterialButton saveButton, @NonNull SwitchMaterial updateChallengeSwitch,
      @NonNull SwitchMaterial viewAnalyticsSwitch) {
    this.rootView = rootView;
    this.createChallengeSwitch = createChallengeSwitch;
    this.deleteChallengeSwitch = deleteChallengeSwitch;
    this.manageUsersSwitch = manageUsersSwitch;
    this.progressBar = progressBar;
    this.saveButton = saveButton;
    this.updateChallengeSwitch = updateChallengeSwitch;
    this.viewAnalyticsSwitch = viewAnalyticsSwitch;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminPermissionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminPermissionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_permissions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminPermissionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.createChallengeSwitch;
      SwitchMaterial createChallengeSwitch = ViewBindings.findChildViewById(rootView, id);
      if (createChallengeSwitch == null) {
        break missingId;
      }

      id = R.id.deleteChallengeSwitch;
      SwitchMaterial deleteChallengeSwitch = ViewBindings.findChildViewById(rootView, id);
      if (deleteChallengeSwitch == null) {
        break missingId;
      }

      id = R.id.manageUsersSwitch;
      SwitchMaterial manageUsersSwitch = ViewBindings.findChildViewById(rootView, id);
      if (manageUsersSwitch == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.saveButton;
      MaterialButton saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.updateChallengeSwitch;
      SwitchMaterial updateChallengeSwitch = ViewBindings.findChildViewById(rootView, id);
      if (updateChallengeSwitch == null) {
        break missingId;
      }

      id = R.id.viewAnalyticsSwitch;
      SwitchMaterial viewAnalyticsSwitch = ViewBindings.findChildViewById(rootView, id);
      if (viewAnalyticsSwitch == null) {
        break missingId;
      }

      return new ActivityAdminPermissionsBinding((LinearLayout) rootView, createChallengeSwitch,
          deleteChallengeSwitch, manageUsersSwitch, progressBar, saveButton, updateChallengeSwitch,
          viewAnalyticsSwitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
