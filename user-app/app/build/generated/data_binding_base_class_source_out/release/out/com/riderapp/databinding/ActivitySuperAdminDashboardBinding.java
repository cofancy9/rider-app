// Generated by view binder compiler. Do not edit!
package com.riderapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.riderapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySuperAdminDashboardBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton adminPermissionsButton;

  @NonNull
  public final MaterialButton createAdminButton;

  @NonNull
  public final MaterialButton listAdminButton;

  @NonNull
  public final MaterialButton listChallengesButton;

  @NonNull
  public final MaterialButton listUsersButton;

  @NonNull
  public final MaterialButton logoutButton;

  private ActivitySuperAdminDashboardBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton adminPermissionsButton, @NonNull MaterialButton createAdminButton,
      @NonNull MaterialButton listAdminButton, @NonNull MaterialButton listChallengesButton,
      @NonNull MaterialButton listUsersButton, @NonNull MaterialButton logoutButton) {
    this.rootView = rootView;
    this.adminPermissionsButton = adminPermissionsButton;
    this.createAdminButton = createAdminButton;
    this.listAdminButton = listAdminButton;
    this.listChallengesButton = listChallengesButton;
    this.listUsersButton = listUsersButton;
    this.logoutButton = logoutButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySuperAdminDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySuperAdminDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_super_admin_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySuperAdminDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adminPermissionsButton;
      MaterialButton adminPermissionsButton = ViewBindings.findChildViewById(rootView, id);
      if (adminPermissionsButton == null) {
        break missingId;
      }

      id = R.id.createAdminButton;
      MaterialButton createAdminButton = ViewBindings.findChildViewById(rootView, id);
      if (createAdminButton == null) {
        break missingId;
      }

      id = R.id.listAdminButton;
      MaterialButton listAdminButton = ViewBindings.findChildViewById(rootView, id);
      if (listAdminButton == null) {
        break missingId;
      }

      id = R.id.listChallengesButton;
      MaterialButton listChallengesButton = ViewBindings.findChildViewById(rootView, id);
      if (listChallengesButton == null) {
        break missingId;
      }

      id = R.id.listUsersButton;
      MaterialButton listUsersButton = ViewBindings.findChildViewById(rootView, id);
      if (listUsersButton == null) {
        break missingId;
      }

      id = R.id.logoutButton;
      MaterialButton logoutButton = ViewBindings.findChildViewById(rootView, id);
      if (logoutButton == null) {
        break missingId;
      }

      return new ActivitySuperAdminDashboardBinding((LinearLayout) rootView, adminPermissionsButton,
          createAdminButton, listAdminButton, listChallengesButton, listUsersButton, logoutButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
